<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="txtBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="15,5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <!--StaticResource {x:Type TextBlock}-->
    <Style BasedOn="{StaticResource txtBlock}" TargetType="TextBlock" x:Key="LabelDesc">
        
    </Style>
    <Style BasedOn="{StaticResource txtBlock}" TargetType="TextBlock" x:Key="LabelValue">
        
    </Style>


    <Style TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="20,5" />
        <Setter Property="FontSize" Value="14" />
    </Style>


    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="15,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>


    <Style TargetType="{x:Type ListBoxItem}" x:Key="AlternateListBoxStyle">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#19f39611"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#19000000"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="ErrorTemplate">
        <DockPanel LastChildFill="true">
            <!--<Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder/>
                </Border>
                <TextBlock Foreground="Red" Text="{Binding [0].ErrorContent}"/>-->
            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                            ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}">
                <!--=AdornedElement.(Validation.Errors)[0].ErrorContent-->
                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white"/>
            </Border>
            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                <Border BorderBrush="red" BorderThickness="1" />
            </AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>

    <DataTemplate x:Key="LogTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--<TextBlock Grid.Column="0" Text="{Binding MessageTime, StringFormat={}{0:hh:mm:ss.fff}}"/>-->
            <!--<TextBlock Grid.Column="1" Text="{Binding MessageContent}" Margin="10,0,0,0"/>-->
            <TextBlock Grid.Column="1" Text="{Binding}" Margin="10,0,0,0"/>
        </Grid>
    </DataTemplate>


    <Style x:Key="SelectableTextBlockLikeStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="-2,0,0,0"/>
        <!-- The Padding -2,0,0,0 is required because the TextBox
        seems to have an inherent "Padding" of about 2 pixels.
        Without the Padding property,
        the text seems to be 2 pixels to the left
        compared to a TextBlock
    -->
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <TextBlock Text="{TemplateBinding Text}" 
                             FontSize="{TemplateBinding FontSize}"
                             FontStyle="{TemplateBinding FontStyle}"
                             FontFamily="{TemplateBinding FontFamily}"
                             FontWeight="{TemplateBinding FontWeight}"
                             TextWrapping="{TemplateBinding TextWrapping}"
                             Foreground="{DynamicResource NormalText}"
                             Padding="0,0,0,0"
                                       />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>